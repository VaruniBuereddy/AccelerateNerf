
Training STarted!!!!!!!!!!
Loaded blender (138, 400, 400, 4) torch.Size([40, 4, 4]) [400, 400, 555.5555155968841] ./data/nerf_synthetic/lego
Not ndc!
Begin
TRAIN views are [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]
TEST views are [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
 131 132 133 134 135 136 137]
VAL views are [100 101 102 103 104 105 106 107 108 109 110 111 112]
[Config] Center cropping of size 200 x 200 is enabled until iter 500
blender_paper_lego 5 [9.388802] 0.23138356 4
iter time 0.14878
/scratch/vb2386/Documents/nerf-pytorch/venv/lib/python3.8/site-packages/torch/functional.py:507: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3549.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
test poses shape torch.Size([25, 4, 4])
0 0.0002868175506591797
torch.Size([400, 400, 3]) torch.Size([400, 400])
1 10.663662433624268
2 10.806880235671997
3 10.75911808013916
4 10.751553773880005
5 10.814573526382446
6 10.822581768035889
7 10.83963656425476
8 10.87105417251587
9 10.931843757629395
10 10.954790353775024
11 10.993738174438477
12 10.96975040435791
13 10.962980508804321

14 10.960580825805664
15 10.963974237442017
16 10.973757266998291
17 10.968070030212402
18 10.982110261917114
19 10.982627868652344
20 10.996353387832642
21 11.028159856796265
22 11.011618375778198
23 10.977287769317627
24 11.047289371490479
Saved test set
blender_paper_lego 10 [8.049077] 0.31369877 9
iter time 0.14825
blender_paper_lego 15 [9.941673] 0.20399594 14
iter time 0.15257
test poses shape torch.Size([25, 4, 4])
0 8.96453857421875e-05
torch.Size([400, 400, 3]) torch.Size([400, 400])
1 11.018568277359009
2 11.083992004394531
3 11.0803701877594
4 11.018659591674805
5 11.06562066078186
6 11.051269054412842
7 11.019725561141968

8 11.030766487121582
9 11.12563419342041
10 11.005844116210938
11 11.030126571655273
12 11.019767761230469
13 10.999180793762207
14 10.995471239089966
15 11.022362470626831
16 11.019010543823242
17 11.005869388580322
18 11.02465534210205
19 11.018278360366821
20 11.00787878036499
21 11.064522743225098
22 11.070284605026245
23 11.012685060501099
24 11.112614393234253
Saved test set
blender_paper_lego 20 [9.799855] 0.21015435 19
iter time 0.15222
blender_paper_lego 25 [10.137234] 0.1962286 24
iter time 0.15257
test poses shape torch.Size([25, 4, 4])
0 9.465217590332031e-05
torch.Size([400, 400, 3]) torch.Size([400, 400])
1 10.988239526748657
2 11.075104713439941
3 11.091367959976196
4 10.99033808708191
5 11.043595314025879

6 11.030902862548828
7 11.00032925605774

8 11.022137880325317
9 11.030969381332397
10 11.005418539047241
11 11.025242567062378
12 11.025831460952759
13 10.989468097686768
[34m[1mwandb[39m[22m: Ctrl + C detected. Stopping sweep.
Traceback (most recent call last):
  File "profile_nerf.py", line 552, in run
    train(args)
  File "profile_nerf.py", line 846, in train
    render_path(torch.Tensor(poses[i_test]).to(device), hwf, K, args.chunk, render_kwargs_test, gt_imgs=images[i_test], savedir=testsavedir)
  File "profile_nerf.py", line 155, in render_path
    rgb, disp, acc, _ = render(H, W, K, chunk=chunk, c2w=c2w[:3,:4], **render_kwargs)
  File "profile_nerf.py", line 127, in render
    all_ret = batchify_rays(rays, chunk, **kwargs)
  File "profile_nerf.py", line 60, in batchify_rays
    ret = render_rays(rays_flat[i:i+chunk], **kwargs)
  File "profile_nerf.py", line 402, in render_rays
    raw = network_query_fn(pts, viewdirs, run_fn)
  File "profile_nerf.py", line 202, in <lambda>
    network_query_fn = lambda inputs, viewdirs, network_fn : run_network(inputs, viewdirs, network_fn,
  File "profile_nerf.py", line 50, in run_network
    outputs_flat = batchify(fn, netchunk)(embedded)
  File "profile_nerf.py", line 34, in ret
    return torch.cat([fn(inputs[i:i+chunk]) for i in range(0, inputs.shape[0], chunk)], 0)
  File "profile_nerf.py", line 34, in <listcomp>
    return torch.cat([fn(inputs[i:i+chunk]) for i in range(0, inputs.shape[0], chunk)], 0)
  File "/scratch/vb2386/Documents/nerf-pytorch/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/scratch/vb2386/Documents/nerf-pytorch/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/scratch/vb2386/Documents/nerf-pytorch/run_nerf_helpers.py", line 108, in forward
    h = torch.cat([feature, input_views], -1)
Exception